{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodo } from '../actions';\n\nclass TodoShow extends React.Component {\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchTodo(id);\n  }\n\n  render() {\n    if (!this.props.todo) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todo: state.todos[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodo\n})(TodoShow);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoShow.js"],"names":["React","connect","fetchTodo","TodoShow","Component","componentDidMount","id","props","match","params","render","todo","title","description","mapStateToProps","state","ownProps","todos"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AACA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACtCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKF,KAAL,CAAWL,SAAX,CAAqBI,EAArB;AACA;;AAEDI,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKH,KAAL,CAAWI,IAAhB,EAAsB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;;AACD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKN,KAAL,CAAWI,IAA1C;AACA,wBACC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AAjBqC;;AAoBvC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEL,IAAAA,IAAI,EAAEI,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBH,EAAlC;AAAR,GAAP;AACA,CAFD;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchTodo } from '../actions';\nclass TodoShow extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tthis.props.fetchTodo(id);\n\t}\n\n\trender() {\n\t\tif (!this.props.todo) {\n\t\t\treturn <div>Loading...</div>;\n\t\t}\n\t\tconst { title, description } = this.props.todo;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<h5>{description}</h5>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { todo: state.todos[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchTodo })(TodoShow);\n"]},"metadata":{},"sourceType":"module"}