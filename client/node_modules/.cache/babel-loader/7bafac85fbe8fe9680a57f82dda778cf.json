{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass TodoList extends React.Component {\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n  renderAdmin(todo) {\n    if (todo.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/todos/edit/${todo.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/todos/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(todo), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/todos/${todo.id}`,\n            className: \"header\",\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/todos/new\",\n          className: \"ui button primary\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: Object.values(state.todos),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(TodoList);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoList.js"],"names":["React","connect","fetchTodos","Link","TodoList","Component","componentDidMount","props","renderAdmin","todo","userId","currentUserId","id","stream","renderList","todos","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass TodoList extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchTodos();\n\t}\n\trenderAdmin(todo) {\n\t\tif (todo.userId === this.props.currentUserId) {\n\t\t\treturn (\n\t\t\t\t<div className='right floated content'>\n\t\t\t\t\t<Link to={`/todos/edit/${todo.id}`} className='ui button primary'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/todos/delete/${stream.id}`}\n\t\t\t\t\t\tclassName='ui button negative'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trenderList() {\n\t\treturn this.props.todos.map(todo => {\n\t\t\treturn (\n\t\t\t\t<div className='item' key={todo.id}>\n\t\t\t\t\t{this.renderAdmin(todo)}\n\t\t\t\t\t<i className='large middle aligned icon camera' />\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t<Link to={`/todos/${todo.id}`} className='header'>\n\t\t\t\t\t\t\t{todo.title}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className='description'>{todo.description}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trenderCreate() {\n\t\tif (this.props.isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<div style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Link to='/todos/new' className='ui button primary'>\n\t\t\t\t\t\tCreate Task\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>Todos</h2>\n\t\t\t\t<div className='ui celled list'>{this.renderList()}</div>\n\t\t\t\t{this.renderCreate()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttodos: Object.values(state.todos),\n\t\tcurrentUserId: state.auth.userId,\n\t\tisSignedIn: state.auth.isSignedIn,\n\t};\n};\n\nexport default connect(mapStateToProps, { fetchTodos })(TodoList);\n"]},"metadata":{},"sourceType":"module"}