{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodo, editTodo } from '../actions';\nimport TodoForm from './TodoForm';\nimport _ from 'lodash';\n\nclass TodoEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n      this.props.editTodo(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchTodo(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return 'Loading...';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit the stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: _.pick(this.props.todo, 'title', 'description'),\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todo: state.todos[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodo,\n  editTodo\n})(TodoEdit);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/todoo/client/src/todos/TodoEdit.js"],"names":["React","connect","fetchTodo","editTodo","TodoForm","_","TodoEdit","Component","onSubmit","formValues","console","log","props","match","params","id","componentDidMount","render","stream","pick","todo","mapStateToProps","state","ownProps","todos"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,YAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAKtCC,QALsC,GAK3BC,UAAU,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,KAAL,CAAWT,QAAX,CAAoB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EAAgDN,UAAhD;AACA,KARqC;AAAA;;AACtCO,EAAAA,iBAAiB,GAAG;AACnBN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWV,SAAX,CAAqB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACA;;AAKDE,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACvB,aAAO,YAAP;AACA;;AACD,wBACC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,UAAD;AACC,QAAA,aAAa,EAAEb,CAAC,CAACc,IAAF,CAAO,KAAKP,KAAL,CAAWQ,IAAlB,EAAwB,OAAxB,EAAiC,aAAjC,CADhB;AAEC,QAAA,QAAQ,EAAE,KAAKZ;AAFhB;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAtBqC;;AAyBvC,MAAMa,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEH,IAAAA,IAAI,EAAEE,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAAlC;AAAR,GAAP;AACA,CAFD;;AAGA,eAAed,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAkDG,QAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodo, editTodo } from '../actions';\nimport TodoForm from './TodoForm';\nimport _ from 'lodash';\nclass TodoEdit extends React.Component {\n\tcomponentDidMount() {\n\t\tconsole.log(this.props);\n\t\tthis.props.fetchTodo(this.props.match.params.id);\n\t}\n\tonSubmit = formValues => {\n\t\tconsole.log(formValues);\n\t\tthis.props.editTodo(this.props.match.params.id, formValues);\n\t};\n\trender() {\n\t\tif (!this.props.stream) {\n\t\t\treturn 'Loading...';\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Edit the stream</h3>\n\t\t\t\t<StreamForm\n\t\t\t\t\tinitialValues={_.pick(this.props.todo, 'title', 'description')}\n\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { todo: state.todos[ownProps.match.params.id] };\n};\nexport default connect(mapStateToProps, { fetchTodo, editTodo })(TodoEdit);\n"]},"metadata":{},"sourceType":"module"}