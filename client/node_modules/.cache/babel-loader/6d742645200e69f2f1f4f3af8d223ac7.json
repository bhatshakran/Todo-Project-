{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/todoo/src/todos/TodoShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchTodo } from '../actions';\n\nclass TodoShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchTodo(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.todo) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.todo;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    todo: state.todos[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodo\n})(TodoShow);","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/todoo/src/todos/TodoShow.js"],"names":["React","flv","connect","fetchTodo","TodoShow","Component","constructor","props","videoRef","createRef","componentDidMount","id","match","params","buildPlayer","componentDidUpdate","componentWillUnmount","player","destroy","stream","createPlayer","type","url","attachMediaElement","current","load","render","todo","title","description","width","mapStateToProps","state","ownProps","todos"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,QAAL,gBAAgBR,KAAK,CAACS,SAAN,EAAhB;AACA;;AACDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;AACA,SAAKN,KAAL,CAAWJ,SAAX,CAAqBQ,EAArB;AACA,SAAKG,WAAL;AACA;;AACDC,EAAAA,kBAAkB,GAAG;AACpB,SAAKD,WAAL;AACA;;AACDE,EAAAA,oBAAoB,GAAG;AACtB,SAAKC,MAAL,CAAYC,OAAZ;AACA;;AACDJ,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEH,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;;AACA,QAAI,KAAKI,MAAL,IAAe,CAAC,KAAKV,KAAL,CAAWY,MAA/B,EAAuC;AACtC;AACA;;AACD,SAAKF,MAAL,GAAchB,GAAG,CAACmB,YAAJ,CAAiB;AAC9BC,MAAAA,IAAI,EAAE,KADwB;AAE9BC,MAAAA,GAAG,EAAG,8BAA6BX,EAAG;AAFR,KAAjB,CAAd;AAIA,SAAKM,MAAL,CAAYM,kBAAZ,CAA+B,KAAKf,QAAL,CAAcgB,OAA7C;AACA,SAAKP,MAAL,CAAYQ,IAAZ;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKnB,KAAL,CAAWoB,IAAhB,EAAsB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA;;AACD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKtB,KAAL,CAAWoB,IAA1C;AACA,wBACC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AAAO,QAAA,GAAG,EAAE,KAAKnB,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAqD,QAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AAxCqC;;AA2CvC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEN,IAAAA,IAAI,EAAEK,KAAK,CAACE,KAAN,CAAYD,QAAQ,CAACrB,KAAT,CAAeC,MAAf,CAAsBF,EAAlC;AAAR,GAAP;AACA,CAFD;;AAIA,eAAeT,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchTodo } from '../actions';\nclass TodoShow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.videoRef = React.createRef();\n\t}\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tthis.props.fetchTodo(id);\n\t\tthis.buildPlayer();\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.buildPlayer();\n\t}\n\tcomponentWillUnmount() {\n\t\tthis.player.destroy();\n\t}\n\tbuildPlayer() {\n\t\tconst { id } = this.props.match.params;\n\t\tif (this.player || !this.props.stream) {\n\t\t\treturn;\n\t\t}\n\t\tthis.player = flv.createPlayer({\n\t\t\ttype: 'flv',\n\t\t\turl: `http://localhost:8000/live/${id}.flv`,\n\t\t});\n\t\tthis.player.attachMediaElement(this.videoRef.current);\n\t\tthis.player.load();\n\t}\n\trender() {\n\t\tif (!this.props.todo) {\n\t\t\treturn <div>Loading...</div>;\n\t\t}\n\t\tconst { title, description } = this.props.todo;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<video ref={this.videoRef} style={{ width: '100%' }} controls />\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<h5>{description}</h5>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { todo: state.todos[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchTodo })(TodoShow);\n"]},"metadata":{},"sourceType":"module"}